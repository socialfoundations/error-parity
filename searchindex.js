Search.setIndex({"alltitles": {"1. Brute-force solver": [[11, "1.-Brute-force-solver"]], "2. LP solver": [[11, "2.-LP-solver"]], "API": [[28, "api"]], "API reference": [[22, null]], "Achieving different fairness constraints on synthetic data": [[16, null]], "Achieving equalized odds on real-world ACS data (ACSIncome)": [[14, null]], "Achieving equalized odds on synthetic data": [[15, null]], "Available constraints": [[9, "available-constraints"]], "Bootstrap estimates": [[27, "bootstrap-estimates"]], "Can I use decision_function instead of predict_proba?": [[17, "can-i-use-decision-function-instead-of-predict-proba"]], "Citing": [[19, "citing"], [26, "citing"]], "Compare accuracy and constraint violation": [[11, "Compare-accuracy-and-constraint-violation"]], "Comparing LP vs brute-force solution": [[11, "Comparing-LP-vs-brute-force-solution"]], "Comparison between error-parity\u2019s LP solver and a brute-force solver": [[11, null]], "Compute distances between theorized ROC points and empirical ROC points": [[15, "Compute-distances-between-theorized-ROC-points-and-empirical-ROC-points"], [16, "Compute-distances-between-theorized-ROC-points-and-empirical-ROC-points"]], "Compute empirical fairness violation": [[16, "Compute-empirical-fairness-violation"]], "Compute performance differences": [[15, "Compute-performance-differences"], [16, "Compute-performance-differences"]], "Constraints": [[9, null]], "Construct the fair optimal classifier (derived from the given predictor)": [[14, "Construct-the-fair-optimal-classifier-(derived-from-the-given-predictor)"], [15, "Construct-the-fair-optimal-classifier-(derived-from-the-given-predictor)"], [16, "Construct-the-fair-optimal-classifier-(derived-from-the-given-predictor)"]], "Constructor": [[30, "constructor"]], "Core concepts": [[8, null]], "Costs and performance": [[8, "costs-and-performance"]], "Do I need to retrain my model?": [[17, "do-i-need-to-retrain-my-model"]], "End-to-end evaluation": [[27, "end-to-end-evaluation"]], "Equalized odds": [[21, "equalized-odds"]], "Equalized odds relaxations": [[26, "equalized-odds-relaxations"]], "Evaluation and metrics": [[27, null]], "Example jupyter notebooks": [[10, null]], "Example usage of error-parity with other fairness-constrained classifiers": [[12, null]], "FAQ": [[17, null]], "Fairness aggregations": [[21, "fairness-aggregations"]], "Fairness constraints": [[8, "fairness-constraints"], [26, "fairness-constraints"]], "Fairness metrics": [[27, "fairness-metrics"]], "Fairness vs Performance trade-off": [[14, "Fairness-vs-Performance-trade-off"]], "Fetch UCI Adult data": [[12, "Fetch-UCI-Adult-data"]], "Fit and plot similar example but using \u201cEqual Opportunity\u201d fairness metric": [[14, "Fit-and-plot-similar-example-but-using-%22Equal-Opportunity%22-fairness-metric"]], "From PyPI": [[20, "from-pypi"]], "From source (development)": [[20, "from-source-development"]], "Getting started": [[26, "getting-started"]], "Given a trained predictor (that outputs real-valued scores)": [[11, "Given-a-trained-predictor-(that-outputs-real-valued-scores)"], [14, "Given-a-trained-predictor-(that-outputs-real-valued-scores)"], [15, "Given-a-trained-predictor-(that-outputs-real-valued-scores)"], [16, "Given-a-trained-predictor-(that-outputs-real-valued-scores)"]], "Given some data (X, Y, S)": [[11, "Given-some-data-(X,-Y,-S)"], [14, "Given-some-data-(X,-Y,-S)"], [15, "Given-some-data-(X,-Y,-S)"], [16, "Given-some-data-(X,-Y,-S)"]], "Glossary": [[18, null]], "Groupwise outputs": [[21, "groupwise-outputs"]], "How do I get uncertainty estimates?": [[17, "how-do-i-get-uncertainty-estimates"]], "How it works": [[26, "how-it-works"]], "Indices": [[19, "indices"]], "Installation": [[20, null]], "Installing": [[26, "installing"]], "Interpretation": [[28, "interpretation"]], "Key features": [[24, "key-features"]], "Let\u2019s train another type of fairness-aware model": [[12, "Let's-train-another-type-of-fairness-aware-model"]], "Log the constant classifier accuracy for each dataset and data type": [[13, "Log-the-constant-classifier-accuracy-for-each-dataset-and-data-type"]], "Map attainable fairness-accuracy trade-offs via (relaxed) post-processing": [[12, "Map-attainable-fairness-accuracy-trade-offs-via-(relaxed)-post-processing"]], "Metrics reference": [[21, null]], "Minimal example": [[25, "minimal-example"]], "NOTE: change the FAIRNESS_CONSTRAINT to your target fairness constraint.": [[16, "NOTE:-change-the-FAIRNESS_CONSTRAINT-to-your-target-fairness-constraint."]], "Next steps": [[25, "next-steps"]], "Notebooks Gallery": [[23, null]], "Notes": [[25, "notes"]], "Obtaining parsed folktables datasets": [[13, null]], "Overview": [[24, null]], "Performance metrics": [[21, "performance-metrics"], [27, "performance-metrics"]], "Plot Fairness-Accuracy Pareto frontier achievable by postprocessing": [[16, "Plot-Fairness-Accuracy-Pareto-frontier-achievable-by-postprocessing"]], "Plot post-processing adjustment frontier": [[12, "Plot-post-processing-adjustment-frontier"]], "Plot postprocessing Pareto frontier": [[15, "Plot-postprocessing-Pareto-frontier"]], "Plot realized ROC points": [[14, "Plot-realized-ROC-points"], [15, "Plot-realized-ROC-points"], [16, "Plot-realized-ROC-points"]], "Plot solution": [[14, "Plot-solution"], [15, "Plot-solution"], [16, "Plot-solution"]], "Plotting utilities": [[29, null]], "Postprocessing frontier (Pareto curve)": [[28, null]], "Practical guidance": [[9, "practical-guidance"]], "Quickstart": [[25, null]], "README.md": [[26, null]], "ROC curves and convex hulls": [[8, "roc-curves-and-convex-hulls"]], "Randomized thresholds": [[8, "randomized-thresholds"]], "Related utilities": [[28, "related-utilities"]], "Relaxations and (ell_p) norms": [[8, "relaxations-and-ell-p-norms"]], "Requirements": [[20, "requirements"]], "See also": [[24, "see-also"]], "Supported Python versions": [[20, "supported-python-versions"]], "Theoretical results:": [[14, "Theoretical-results:"]], "Tips": [[30, "tips"]], "Tolerance": [[9, "tolerance"]], "Train a standard (unconstrained) classifier": [[12, "Train-a-standard-(unconstrained)-classifier"]], "Typical workflow": [[24, "typical-workflow"]], "Using the RelaxedThresholdOptimizer": [[30, null]], "Welcome to error-parity\u2019s documentation!": [[19, null]], "What if my groups are not 0..G-1?": [[17, "what-if-my-groups-are-not-0-g-1"]], "What this is not": [[24, "what-this-is-not"]], "What tolerance should I use?": [[17, "what-tolerance-should-i-use"]], "When to use error-parity": [[24, "when-to-use-error-parity"]], "error-parity    <!-- omit in toc -->": [[26, "error-parity"]], "error_parity.binarize": [[0, null]], "error_parity.classifiers": [[1, null]], "error_parity.cvxpy_utils": [[2, null]], "error_parity.evaluation": [[3, null]], "error_parity.pareto_curve": [[4, null]], "error_parity.plotting": [[5, null]], "error_parity.roc_utils": [[6, null]], "error_parity.threshold_optimizer": [[7, null]]}, "docnames": ["api/error_parity.binarize", "api/error_parity.classifiers", "api/error_parity.cvxpy_utils", "api/error_parity.evaluation", "api/error_parity.pareto_curve", "api/error_parity.plotting", "api/error_parity.roc_utils", "api/error_parity.threshold_optimizer", "concepts", "constraints", "examples/README", "examples/brute-force-example_equalized-odds-thresholding", "examples/example-with-postprocessing-and-inprocessing", "examples/parse-folktables-datasets", "examples/relaxed-equalized-odds.usage-example-folktables", "examples/relaxed-equalized-odds.usage-example-synthetic-data", "examples/usage-example-for-other-constraints.synthetic-data", "faq", "glossary", "index", "installation", "metrics_reference", "modules", "notebooks", "overview", "quickstart", "readme", "usage_evaluation", "usage_pareto_curve", "usage_plotting", "usage_threshold_optimizer"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api/error_parity.binarize.rst", "api/error_parity.classifiers.rst", "api/error_parity.cvxpy_utils.rst", "api/error_parity.evaluation.rst", "api/error_parity.pareto_curve.rst", "api/error_parity.plotting.rst", "api/error_parity.roc_utils.rst", "api/error_parity.threshold_optimizer.rst", "concepts.rst", "constraints.rst", "examples/README.md", "examples/brute-force-example_equalized-odds-thresholding.ipynb", "examples/example-with-postprocessing-and-inprocessing.ipynb", "examples/parse-folktables-datasets.ipynb", "examples/relaxed-equalized-odds.usage-example-folktables.ipynb", "examples/relaxed-equalized-odds.usage-example-synthetic-data.ipynb", "examples/usage-example-for-other-constraints.synthetic-data.ipynb", "faq.rst", "glossary.rst", "index.rst", "installation.rst", "metrics_reference.rst", "modules.rst", "notebooks.rst", "overview.rst", "quickstart.rst", "readme.rst", "usage_evaluation.rst", "usage_pareto_curve.rst", "usage_plotting.rst", "usage_threshold_optimizer.rst"], "indexentries": {"compute_inner_and_outer_adjustment_ci() (in module error_parity.pareto_curve)": [[28, "error_parity.pareto_curve.compute_inner_and_outer_adjustment_ci", false]], "compute_postprocessing_curve() (in module error_parity.pareto_curve)": [[28, "error_parity.pareto_curve.compute_postprocessing_curve", false]], "constraint_violation() (error_parity.threshold_optimizer.relaxedthresholdoptimizer method)": [[30, "error_parity.threshold_optimizer.RelaxedThresholdOptimizer.constraint_violation", false]], "cost() (error_parity.threshold_optimizer.relaxedthresholdoptimizer method)": [[30, "error_parity.threshold_optimizer.RelaxedThresholdOptimizer.cost", false]], "demographic_parity_violation() (error_parity.threshold_optimizer.relaxedthresholdoptimizer method)": [[30, "error_parity.threshold_optimizer.RelaxedThresholdOptimizer.demographic_parity_violation", false]], "equalized_odds_violation() (error_parity.threshold_optimizer.relaxedthresholdoptimizer method)": [[30, "error_parity.threshold_optimizer.RelaxedThresholdOptimizer.equalized_odds_violation", false]], "error_parity.binarize": [[0, "module-error_parity.binarize", false]], "error_parity.classifiers": [[1, "module-error_parity.classifiers", false]], "error_parity.cvxpy_utils": [[2, "module-error_parity.cvxpy_utils", false]], "error_parity.evaluation": [[3, "module-error_parity.evaluation", false]], "error_parity.pareto_curve": [[4, "module-error_parity.pareto_curve", false]], "error_parity.plotting": [[5, "module-error_parity.plotting", false]], "error_parity.roc_utils": [[6, "module-error_parity.roc_utils", false]], "error_parity.threshold_optimizer": [[7, "module-error_parity.threshold_optimizer", false]], "error_rate_parity_constraint_violation() (error_parity.threshold_optimizer.relaxedthresholdoptimizer method)": [[30, "error_parity.threshold_optimizer.RelaxedThresholdOptimizer.error_rate_parity_constraint_violation", false]], "evaluate_fairness() (in module error_parity.evaluation)": [[27, "error_parity.evaluation.evaluate_fairness", false]], "evaluate_performance() (in module error_parity.evaluation)": [[27, "error_parity.evaluation.evaluate_performance", false]], "evaluate_predictions() (in module error_parity.evaluation)": [[27, "error_parity.evaluation.evaluate_predictions", false]], "evaluate_predictions_bootstrap() (in module error_parity.evaluation)": [[27, "error_parity.evaluation.evaluate_predictions_bootstrap", false]], "fit() (error_parity.threshold_optimizer.relaxedthresholdoptimizer method)": [[30, "error_parity.threshold_optimizer.RelaxedThresholdOptimizer.fit", false]], "fit_and_evaluate_postprocessing() (in module error_parity.pareto_curve)": [[28, "error_parity.pareto_curve.fit_and_evaluate_postprocessing", false]], "get_envelope_of_postprocessing_frontier() (in module error_parity.pareto_curve)": [[28, "error_parity.pareto_curve.get_envelope_of_postprocessing_frontier", false]], "global_prevalence (error_parity.threshold_optimizer.relaxedthresholdoptimizer property)": [[30, "error_parity.threshold_optimizer.RelaxedThresholdOptimizer.global_prevalence", false]], "global_roc_point (error_parity.threshold_optimizer.relaxedthresholdoptimizer property)": [[30, "error_parity.threshold_optimizer.RelaxedThresholdOptimizer.global_roc_point", false]], "groupwise_prevalence (error_parity.threshold_optimizer.relaxedthresholdoptimizer property)": [[30, "error_parity.threshold_optimizer.RelaxedThresholdOptimizer.groupwise_prevalence", false]], "groupwise_roc_data (error_parity.threshold_optimizer.relaxedthresholdoptimizer property)": [[30, "error_parity.threshold_optimizer.RelaxedThresholdOptimizer.groupwise_roc_data", false]], "groupwise_roc_hulls (error_parity.threshold_optimizer.relaxedthresholdoptimizer property)": [[30, "error_parity.threshold_optimizer.RelaxedThresholdOptimizer.groupwise_roc_hulls", false]], "groupwise_roc_points (error_parity.threshold_optimizer.relaxedthresholdoptimizer property)": [[30, "error_parity.threshold_optimizer.RelaxedThresholdOptimizer.groupwise_roc_points", false]], "module": [[0, "module-error_parity.binarize", false], [1, "module-error_parity.classifiers", false], [2, "module-error_parity.cvxpy_utils", false], [3, "module-error_parity.evaluation", false], [4, "module-error_parity.pareto_curve", false], [5, "module-error_parity.plotting", false], [6, "module-error_parity.roc_utils", false], [7, "module-error_parity.threshold_optimizer", false]], "plot_postprocessing_frontier() (in module error_parity.plotting)": [[29, "error_parity.plotting.plot_postprocessing_frontier", false]], "plot_postprocessing_solution() (in module error_parity.plotting)": [[29, "error_parity.plotting.plot_postprocessing_solution", false]], "predict() (error_parity.threshold_optimizer.relaxedthresholdoptimizer method)": [[30, "error_parity.threshold_optimizer.RelaxedThresholdOptimizer.predict", false]], "relaxedthresholdoptimizer (class in error_parity.threshold_optimizer)": [[30, "error_parity.threshold_optimizer.RelaxedThresholdOptimizer", false]]}, "objects": {"error_parity": [[0, 0, 0, "-", "binarize"], [1, 0, 0, "-", "classifiers"], [2, 0, 0, "-", "cvxpy_utils"], [3, 0, 0, "-", "evaluation"], [4, 0, 0, "-", "pareto_curve"], [5, 0, 0, "-", "plotting"], [6, 0, 0, "-", "roc_utils"], [7, 0, 0, "-", "threshold_optimizer"]], "error_parity.evaluation": [[27, 1, 1, "", "evaluate_fairness"], [27, 1, 1, "", "evaluate_performance"], [27, 1, 1, "", "evaluate_predictions"], [27, 1, 1, "", "evaluate_predictions_bootstrap"]], "error_parity.pareto_curve": [[28, 1, 1, "", "compute_inner_and_outer_adjustment_ci"], [28, 1, 1, "", "compute_postprocessing_curve"], [28, 1, 1, "", "fit_and_evaluate_postprocessing"], [28, 1, 1, "", "get_envelope_of_postprocessing_frontier"]], "error_parity.plotting": [[29, 1, 1, "", "plot_postprocessing_frontier"], [29, 1, 1, "", "plot_postprocessing_solution"]], "error_parity.threshold_optimizer": [[30, 2, 1, "", "RelaxedThresholdOptimizer"]], "error_parity.threshold_optimizer.RelaxedThresholdOptimizer": [[30, 3, 1, "", "constraint_violation"], [30, 3, 1, "", "cost"], [30, 3, 1, "", "demographic_parity_violation"], [30, 3, 1, "", "equalized_odds_violation"], [30, 3, 1, "", "error_rate_parity_constraint_violation"], [30, 3, 1, "", "fit"], [30, 4, 1, "", "global_prevalence"], [30, 4, 1, "", "global_roc_point"], [30, 4, 1, "", "groupwise_prevalence"], [30, 4, 1, "", "groupwise_roc_data"], [30, 4, 1, "", "groupwise_roc_hulls"], [30, 4, 1, "", "groupwise_roc_points"], [30, 3, 1, "", "predict"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property"}, "terms": {"": [9, 13, 24, 26, 28, 29, 30], "0": [9, 11, 12, 13, 14, 15, 16, 21, 24, 25, 26, 28, 30], "000": [14, 15, 16], "000282458": 16, "00044025": 14, "000574791": 15, "000851617415307666": 12, "003": [15, 16], "007": 14, "01": [14, 15, 16, 28], "010": 14, "017": 14, "02": [14, 15, 16, 28], "03": [12, 14, 15, 16, 28], "036": 16, "03632111": 16, "04": [14, 15, 16, 28], "04159198": 16, "04660537497114363": 11, "0498": 12, "05": [11, 14, 15, 16, 24, 25, 26, 28], "052": 14, "05891875": 15, "05919955": 15, "06": [14, 15, 16, 28], "063": 15, "0673": 12, "07": [14, 15, 16, 28], "07436224": 15, "08": [14, 15, 16, 28], "089": 15, "09": [14, 15, 16, 28], "092": 16, "0x11df428c0": 15, "0x12b1a5db0": 16, "0x163262380": 14, "0x16dac2650": 12, "1": [12, 13, 14, 15, 16, 18, 21, 24, 25, 26, 27, 28, 30], "10": [11, 12, 13, 14, 15, 16], "100": [12, 16], "1000": 30, "100_000": [11, 15, 16], "10263456": 14, "104": 11, "10552007": 16, "10639373": 15, "108": 11, "109": 11, "11": [11, 12, 14, 15, 16, 28], "114": 14, "114m": 11, "11605835": 16, "118": 14, "12": [11, 12, 14, 15, 16, 28], "12570": 14, "12760711": 14, "13": [11, 12, 14, 15, 16, 28], "14": [11, 12, 14, 15, 16, 28], "14162381": 14, "14576582": 14, "14840647": 14, "15": [11, 12, 14, 15, 16, 28], "152": 16, "15335531408011688": 16, "16": [11, 12, 14, 15, 16, 28], "161": 16, "17": [12, 14, 15, 16, 28], "17475045311134396": 15, "18": [11, 12, 14, 15, 16, 28], "19": [14, 15, 16, 28], "19386": 14, "199": [15, 16], "1_000_000": [11, 15, 16], "1e": [11, 12, 14], "1min": [12, 14], "1st": 13, "2": [12, 13, 14, 15, 16, 21, 27, 28, 30], "20": [12, 14], "200": [12, 14, 15, 16, 27], "201182803373743": 14, "2016": 26, "2018": [12, 13], "2020": 12, "2023": 12, "2024": [19, 26], "208": [14, 15], "21": 14, "218": 14, "22": 14, "23": [11, 14, 15, 16], "23852472": 16, "24": 14, "242": 16, "25": [11, 14, 15, 16], "259521": 14, "26": [11, 14, 15, 16], "27": [11, 14], "28": 14, "282": 15, "286": 13, "29": 14, "29518": 14, "2_max": 14, "2_valid": 14, "2e": 14, "2nd": 13, "3": [11, 12, 13, 14, 15, 16, 28], "322": 16, "3236107": 13, "336": 16, "34": 13, "35": 14, "36": 16, "37": 14, "38": 16, "39": [11, 12], "3min": 11, "3rd": 13, "4": [11, 12, 13, 14, 15, 16, 28], "41": 16, "42": [11, 13, 14, 27, 28, 30], "4356": 11, "441": 15, "45": 14, "46": 14, "47": 14, "475": 15, "48": 14, "49": 12, "4min": 11, "5": [11, 12, 13, 14, 15, 16, 19, 27, 28], "50": [12, 14], "50k": 12, "53750647": 15, "5397890715398488": 13, "5401004328892394": 13, "5415303116248027": 13, "54775546": 15, "55319488": 15, "55402037": 15, "559": 15, "5620214827548473": 13, "5622398192707292": 13, "5624768352647576": 13, "58": 12, "59": 12, "5e": 12, "6": [11, 12, 13, 14, 15, 16, 28], "6267948098880045": 13, "6275487157120827": 13, "6276484057384071": 13, "65": 28, "65242546": 14, "678": 16, "69338557": 16, "69846535": 14, "6_test": 14, "7": [11, 12, 13, 14, 15, 16, 28], "7000000000000001": 11, "70242546": 14, "7048998544597685": 13, "705777716173447": 13, "7080615054796799": 13, "71687162": 16, "72": 11, "73": 15, "7358002054311933": 13, "7366843896876353": 13, "7369037614281713": 13, "74338557": 16, "76": 15, "7607125098715961": 12, "7607315908005187": 12, "79": 14, "8": [11, 12, 13, 14, 15, 16, 28], "80": [11, 14], "80763": 11, "81": 14, "82": [11, 15], "84": 16, "867": 12, "87": 12, "885": 12, "886": 14, "9": [11, 12, 14, 15, 16, 28], "90": [12, 14], "95": [12, 27, 28], "96": 11, "97": 27, "A": [2, 3, 14, 26, 27, 28, 29, 30], "And": 13, "As": [11, 15, 16], "By": [12, 28, 30], "For": [8, 20, 21, 25, 26, 28], "If": [13, 25, 27, 28, 30], "In": [12, 14], "It": [19, 24], "No": [14, 17], "On": [12, 14], "One": 30, "Or": 26, "That": [12, 30], "The": [8, 13, 14, 16, 18, 19, 20, 24, 26, 27, 28, 29, 30], "Will": [27, 28, 29, 30], "With": 8, "_": [11, 12, 16], "__": 12, "__call__": [15, 16, 28], "__version__": [11, 12, 14, 15, 16], "_fair": 26, "_high": 12, "_low": 12, "_max": 13, "_mean": 12, "_moment": 12, "_pmf_predict": 12, "_test": 13, "_valid": 13, "abc": 11, "abov": [11, 15, 16, 26], "absolut": [8, 26, 30], "ac": 13, "acc": [12, 14, 15, 16], "acc_unfair_best": 14, "acc_unfair_threshold": 14, "acc_val": 14, "accept": 9, "accord": [9, 13], "accordingli": 26, "accuraci": [4, 10, 14, 15, 19, 21, 24, 28, 30], "accuracy_fit": 14, "accuracy_mean": 12, "accuracy_mean_test": 28, "accuracy_scor": [14, 15, 16], "accuracy_v": [15, 16], "achiev": [8, 11, 18, 19, 26, 29, 30], "across": [8, 9, 24, 28], "acs_categorical_col": [13, 14], "acs_data": 13, "acs_task": [13, 14], "acsdatasourc": 13, "acsemploy": 13, "acsincom": [10, 13], "acsmobl": 13, "acspubliccoverag": 13, "acstraveltim": 13, "actual": [11, 14, 15, 16, 26], "actual_point": [14, 15, 16], "actual_preval": [11, 14, 15, 16], "ad": 13, "add": [11, 13, 15, 16], "addit": 19, "addition": 16, "adjust": [14, 15, 16, 26, 28], "after": 28, "against": 11, "agarw": 12, "al": [12, 26], "alaska": 14, "algorithm": [10, 19, 26], "all": [8, 9, 11, 13, 15, 19, 30], "all_acs_task": 13, "all_data": 14, "all_group_color": [14, 15, 16], "all_groups_name_map": 14, "allow": [9, 18, 19, 25, 30], "alon": 10, "alreadi": [11, 12, 15, 16, 29], "also": 12, "alter": 26, "alwai": 13, "ambigu": 13, "amer": 12, "american": 14, "among": [14, 15, 16, 30], "an": [8, 10, 12, 26, 28, 29, 30], "anc": [13, 14], "ancestri": [13, 14], "andr": [19, 26], "andrefcruz": [0, 3], "ani": [16, 18, 19, 24, 26, 28, 30], "annot": 12, "anoth": 30, "api": [19, 25, 26], "append": [13, 14, 15, 16], "approach": 24, "appropri": [25, 29], "ar": [8, 16, 18, 19, 20, 25, 26, 28, 30], "arang": [11, 12, 14, 15, 16], "argument": [14, 26, 28], "arrai": [11, 12, 25, 28, 30], "art": 12, "as_fram": 12, "ascend": 13, "asian": [12, 14], "assert": [11, 13, 15, 16], "assist": 19, "assum": [11, 14, 15, 16, 25, 28, 30], "astyp": [11, 12, 13, 14, 15, 16], "asymmetr": 30, "attain": [10, 15, 19], "attribut": [12, 13, 27, 28], "author": [19, 26], "auto": [11, 13, 14], "avail": [10, 19, 26, 29], "averag": 26, "average_abs_odds_differ": 26, "avoid": 28, "awai": 13, "ax_kwarg": 12, "axi": 29, "axvlin": 12, "b": [8, 21, 26], "badg": 20, "base": [0, 3, 9, 10, 12, 17, 19, 24, 26, 30], "baselin": 11, "basi": 19, "basicconfig": [14, 15, 16], "basicproblem": 13, "bbox_to_anchor": 12, "becaus": 11, "befor": 17, "belong": [11, 13, 15, 16, 27], "below": [11, 12], "best": [11, 14, 16], "best_accuraci": 11, "best_combi": 11, "best_eq_odds_viol": 11, "between": [8, 9, 10, 14, 19, 26, 27, 28, 30], "bf": 11, "bf_acc": 11, "bf_eq_odd": 11, "big": 13, "big_group": 13, "big_groups_filt": 13, "bigstar": [12, 14, 15], "binar": [11, 12], "binari": [13, 24, 26], "binarize_predict": 11, "binarized_pr": 11, "birth": [13, 14], "black": [12, 13, 14, 16, 29], "blob": [0, 3], "booktitl": [19, 26], "bool": [13, 27, 28, 29], "boolean": 11, "bootstrap": [12, 14, 15, 16, 24, 28, 29], "bootstrap_kwarg": 28, "borderaxespad": 12, "both": [9, 27], "bound": [27, 29], "box": [16, 29], "branch": 19, "brute": 10, "brute_force_solut": 11, "build": 20, "built": 24, "c": [14, 28], "calc_cost_of_point": [14, 15, 16], "calcul": 16, "call": [12, 17, 28, 29], "callabl": [16, 25, 26, 28, 30], "can": [8, 11, 12, 13, 14, 15, 16, 19, 24, 26], "carefulli": 24, "cat_col": 14, "categor": [13, 14], "categori": [13, 14], "ceil": 11, "cell": [12, 14], "center": 12, "chang": [13, 14, 24, 26], "character": [8, 11], "characterist": 18, "check": [12, 13, 16, 19], "choos": [9, 24, 26], "chosen": [18, 24, 26], "ci": 12, "cit": [13, 14], "citizenship": [13, 14], "class": [1, 7, 13, 14, 17, 27, 30], "classifi": [4, 8, 11, 18, 20, 24, 26, 28, 29, 30], "classifier_": 26, "clf": [11, 14, 15, 16], "clone": [20, 26], "close": 16, "code": [13, 14, 19], "col": [13, 14], "collect": 11, "color": [12, 14, 15, 16, 29], "color_palett": [14, 15, 16], "colorblind": 12, "cols_ord": 13, "column": [12, 13, 14, 28, 30], "com": [0, 3, 12, 20, 26], "combi": 11, "combin": 11, "comment": 12, "common": [3, 12, 27], "commun": 26, "companion": 14, "compar": [24, 26], "comparison": 10, "compat": [19, 28], "complement": 24, "compos": 14, "comput": [4, 8, 14, 21, 24, 25, 26, 27, 28, 30], "compute_constant_clf_accuraci": 12, "compute_inner_and_outer_adjustment_ci": 28, "compute_postproc_kwarg": 12, "compute_postprocessing_curv": [12, 14, 15, 16, 28, 29], "compute_roc_point_from_predict": [14, 15, 16], "concept": [19, 24], "conclus": 11, "confer": [19, 26], "confid": [17, 27, 28, 29], "confidence_pct": 27, "configur": 24, "consider": 12, "const_pr": [12, 14, 15, 16], "const_predictor_acc": 13, "constant": [11, 12, 15, 28, 29], "constant_clf_accuraci": 12, "constant_clf_disp": 28, "constant_clf_perf": [12, 14, 15, 16, 28, 29], "constrain": [8, 11, 14, 26, 30], "constraint": [10, 12, 14, 15, 18, 19, 24, 25, 28, 29, 30], "constraint_nam": 30, "constraint_viol": [14, 16, 30], "construct": [1, 11], "constructor": 26, "contain": [14, 15, 16, 28, 29, 30], "content": [12, 26], "contigu": 25, "continu": [0, 14], "contribut": 26, "control": 30, "converg": [14, 15, 16], "convex": [14, 15, 16, 18, 24, 26, 28, 29, 30], "convexhul": [11, 14, 15, 16], "copi": [13, 28], "core": 24, "correct": [13, 21], "correspond": [12, 26, 28, 30], "cost": [14, 15, 16, 25, 30], "couldn": 14, "cover": 27, "cow": [13, 14], "cp": [11, 14, 15, 16], "cpu": [11, 12, 14, 15, 16], "cpu_count": [12, 28], "creat": [13, 28], "criteria": [12, 26], "criterion": 26, "cruz": [12, 19, 26], "cruz2024unprocess": [19, 26], "csv": [13, 14], "curios": [10, 11], "curr_accuraci": 11, "curr_const_clf_acc": 12, "curr_data": 13, "curr_eq_odds_viol": 11, "curr_realized_roc_point": [14, 15, 16], "curr_result": 11, "curr_typ": 13, "current": [11, 26], "curv": [14, 15, 16, 17, 24, 25, 26, 29], "cvxpy": [2, 11, 14, 15, 16, 20, 26], "d": [28, 30], "data": [10, 24, 26, 27, 28, 29, 30], "data_1": 28, "data_dir": [13, 14], "data_nam": 28, "data_sourc": 13, "data_triplet": 28, "data_tupl": 11, "data_typ": [14, 28], "datafram": [13, 14, 28, 29], "dataset": [10, 12, 14, 15, 16, 28], "datasheet": 13, "dear": [13, 14], "decis": 9, "decision_funct": 25, "deepcopi": 13, "def": [11, 12, 13, 14, 15, 16], "default": [8, 9, 14, 16, 26, 27, 28, 29, 30], "default_rng": [11, 15, 16], "defin": [11, 15, 16], "definit": 13, "delet": 13, "demograph": [8, 9, 10, 24, 26, 30], "demographic_par": [9, 16, 26], "demographic_parity_viol": 30, "demonstr": 25, "depend": [13, 20], "descript": 10, "detail": 26, "determinist": [8, 11], "dev": [11, 14, 15, 16], "develop": 26, "dey": [13, 14], "df": [13, 14, 28], "df_to_numpi": 13, "di": [13, 14], "diagnost": 25, "diagon": [8, 29], "dict": [11, 12, 14, 27, 28, 29, 30], "dictat": 26, "dictionari": [27, 28, 29], "diff": 12, "differ": [8, 9, 11, 12, 21, 24, 26, 30], "dir_path": 14, "directli": 25, "disabl": [13, 14], "disadvantag": 12, "discard": 13, "discret": 27, "disk": [13, 14], "disp_col": 28, "disp_metr": [12, 14, 15, 16, 28, 29], "dispar": [9, 18, 25, 28, 29], "disparity_metr": 16, "disparity_metric_map": 16, "displai": 14, "disproportion": 12, "dist": [14, 15, 16], "distanc": [8, 14, 26, 28, 30], "do": 13, "doc": 20, "document": [20, 26], "doe": 24, "don": 13, "download": [10, 12, 13, 14], "dpi": [12, 14, 15, 16], "draw": 27, "drem": [13, 14], "drop": [13, 24], "dtype": [11, 12, 13], "dummi": [11, 12, 15, 28], "dump": 13, "dure": 12, "dynam": 13, "e": [8, 12, 13, 15, 19, 24, 26, 27, 30], "each": [8, 11, 12, 14, 15, 16, 21, 26, 27, 28, 29, 30], "easili": [14, 19], "effici": 11, "either": 13, "elem": 12, "ell_": [14, 15], "ell_1": [8, 21, 30], "ell_2": [8, 21, 30], "ell_infti": [8, 21, 30], "ell_p": [9, 24], "els": [11, 12, 13, 14, 15], "empir": 14, "empirical_constraint_viol": 16, "empirical_metr": 16, "employ": [13, 14], "encapsul": 30, "encod": [13, 17, 25], "enforc": [9, 13, 24], "ensembl": 14, "ensur": [17, 30], "entir": 14, "enumer": [14, 15, 16], "envelop": 28, "environ": [12, 14], "epsilon_toler": [11, 14, 15, 16], "eq": [11, 15], "eq_odd": 11, "eq_odds_viol": 11, "equal": [6, 7, 8, 9, 10, 11, 12, 16, 24, 28, 30], "equalized_odd": [9, 11, 12, 14, 15, 16, 25, 26, 28, 30], "equalized_odds_diff": [12, 16, 21], "equalized_odds_diff_l": [14, 15, 21], "equalized_odds_diff_mean": 12, "equalized_odds_diff_mean_test": 28, "equalized_odds_ratio": 21, "equalized_odds_viol": 30, "equalizedodd": 12, "equat": 26, "error": [8, 9, 14, 15, 16, 17, 20, 21, 30], "error_par": [8, 11, 12, 14, 15, 16, 17, 21, 25, 26, 27, 28, 29, 30], "error_rate_parity_constraint_viol": 30, "error_typ": 30, "eskimo": 12, "esp": [13, 14], "esr": [13, 14], "estim": [12, 28], "et": [12, 26], "etc": 21, "eval": 28, "eval_accuracy_and_equalized_odd": [11, 14, 15], "eval_data": [12, 14, 15, 16, 28], "evalu": [11, 12, 14, 15, 16, 17, 19, 21, 24, 25, 26, 28], "evaluate_fair": [16, 21, 27], "evaluate_perform": 27, "evaluate_predict": [21, 27], "evaluate_predictions_bootstrap": [12, 17, 27], "exactli": 11, "exampl": [8, 11, 15, 16, 19, 26, 28], "example_equ": 10, "exce": 13, "exhaust": 11, "exist": 14, "exist_ok": 13, "expandus": [13, 14], "expect": [14, 15, 16], "experi": 13, "explor": [17, 24, 25], "exponentiatedgradi": 12, "exponentiatedgradientexponentiatedgradi": 12, "express": 8, "extens": 19, "exterior": 28, "extra": [11, 12, 14, 15, 16, 28], "f": [11, 12, 13, 14, 15, 16], "fair": [3, 4, 10, 18, 19, 24, 25, 28, 30], "fair_clf": [25, 26], "fairlearn": 12, "fairness_constraint": [12, 14, 15, 28], "fals": [8, 9, 12, 13, 14, 15, 16, 18, 21, 27, 28, 29, 30], "false_neg_cost": [11, 14, 15, 16, 30], "false_negative_rate_par": 16, "false_pos_cost": [11, 14, 15, 16, 30], "false_positive_rate_par": [9, 16, 26], "faq": 19, "fast": [24, 26], "featur": [11, 13, 14, 15, 16, 28, 30], "feature_col": 14, "femal": 12, "fer": [13, 14], "fetch_adult": 12, "few": [12, 14, 26], "fig_kwarg": 29, "figsiz": [12, 14, 15, 16], "figur": [12, 29], "file": [10, 14, 19], "file_prefix": 13, "filter": 11, "find": [14, 24, 26], "finer": 11, "fit": [11, 12, 15, 16, 17, 24, 25, 26, 28, 29, 30], "fit_and_evaluate_postprocess": 28, "fit_data": [12, 14, 15, 16, 28], "float": [11, 12, 13, 15, 16, 27, 28, 29, 30], "fn": [12, 30], "fn_cost": [11, 14, 15, 16], "fnr": [3, 15, 16, 18, 21, 30], "fnr_ratio": 21, "folder": [13, 26], "folktabl": [10, 14], "follow": [12, 13, 14, 15, 16, 19, 30], "fontsiz": 12, "forc": [10, 14, 15, 16], "format": 28, "formul": 11, "forum": [19, 26], "found": [11, 14, 15, 16, 26, 29, 30], "fp": [12, 30], "fp_cost": [11, 14, 15, 16], "fpr": [3, 8, 9, 10, 14, 15, 16, 18, 21, 26, 29, 30], "fpr_diff": [16, 21], "fpr_group": 21, "fpr_ratio": 21, "fraction": [18, 21], "from": [11, 12, 13, 19, 25, 26], "frontier": [4, 5, 10, 14, 17, 19, 24, 25, 29], "fulfil": [11, 14, 26, 28], "full": [11, 19, 26], "function": [0, 1, 2, 3, 4, 5, 6, 28], "functool": 13, "further": 12, "g": [8, 12, 13, 24, 25, 30], "galleri": 19, "gaussian": [11, 15, 16], "gca": 12, "gcl": [13, 14], "gener": [11, 13, 14, 15, 16, 29, 30], "generate_synthetic_data": [11, 15, 16], "get_data": 13, "get_envelope_of_postprocessing_fronti": 28, "getattr": [13, 14], "git": [20, 26], "github": [0, 3, 12, 14, 19, 20, 26], "given": [10, 13, 26, 27, 28, 29, 30], "global": [8, 11, 12, 13, 14, 15, 16, 29, 30], "global_clf_realized_roc_point": [14, 15, 16], "global_color": [14, 15, 16], "global_preval": 30, "global_roc_point": [14, 15, 16, 30], "glossari": 19, "go": 12, "gonna": 13, "got": 11, "gpt": 19, "gradual": 17, "granular": 28, "grei": 12, "grid": [11, 12, 14, 15, 16], "group": [8, 9, 11, 12, 13, 14, 15, 16, 19, 21, 24, 25, 26, 27, 29, 30], "group_filt": [11, 14, 15, 16], "group_kei": 11, "group_membership": 11, "group_name_map": [14, 29], "group_nois": [11, 15, 16], "group_score_pr": 11, "group_siz": 13, "group_test": [25, 26], "group_thr": 11, "group_threshold": 11, "group_threshold_combin": 11, "groupwis": 27, "groupwise_preval": 30, "groupwise_roc_data": 30, "groupwise_roc_hul": 30, "groupwise_roc_point": [14, 15, 16, 30], "gt": [12, 14, 15, 16], "guid": [25, 26], "ha": [11, 12, 13, 14, 15, 16, 28], "hardt": [12, 19, 26], "hat": 26, "have": [11, 13, 15, 16, 24, 26], "hawaiian": 14, "header": 13, "helper": [1, 2, 6, 11, 15, 16, 27, 29], "hi_thr": 11, "high": [11, 15, 16], "high_thr": 11, "higher": [17, 25, 28], "highest": 13, "horizon": 13, "horizont": 29, "horizontalalign": 12, "how": [9, 27], "hpt": [0, 3], "hstack": [12, 14], "html": [12, 14, 26], "http": [0, 3, 12, 19, 20, 26], "hull": [14, 15, 16, 18, 24, 26, 28, 29, 30], "hyperparamet": 12, "i": [8, 9, 11, 12, 13, 14, 15, 16, 19, 25, 26, 27, 28, 29, 30], "iclr": 26, "id": [19, 26], "idx": [11, 13, 14, 15, 16], "ignor": 28, "ignore_col": 14, "impact": 12, "implement": [9, 26], "import": [11, 12, 13, 14, 15, 16, 25, 26], "inaccur": 27, "includ": [19, 21, 24, 29], "increas": [12, 17], "indent": 13, "index": [8, 11, 13, 15, 16, 19, 25], "index_col": 14, "index_label": 13, "indian": [12, 14], "indic": 17, "individu": 12, "induc": [8, 11, 15, 16], "inequ": [11, 15, 16], "inf": [14, 15, 16, 21, 26, 28, 30], "infin": 14, "info": [14, 15, 16], "inform": 26, "infti": [14, 15], "initi": 30, "inner": 28, "inner_ytick": 28, "inproc_clf": 12, "inproc_postproc_results_df": 12, "inproc_test_result": 12, "inproceed": [19, 26], "inprocess": [10, 12], "input": 30, "insid": 8, "instal": [11, 12, 14, 15, 16, 19], "instead": 30, "int": [11, 12, 13, 14, 15, 16, 27, 28, 30], "integ": [11, 13, 15, 16, 17, 25, 30], "interfac": 28, "interior": [24, 26, 28], "intern": [19, 26], "interv": [17, 27, 28, 29], "interven": 12, "intervent": [12, 28], "introduc": 12, "io": 26, "ipynb": [10, 14], "isclos": [11, 13], "isinst": 11, "island": 12, "item": [11, 12], "iter": 11, "itertool": [11, 14, 15, 16], "its": [19, 26], "itself": 9, "job": 28, "jr03sfwsb": [19, 26], "json": 13, "jupyt": [12, 14, 19], "just": [11, 15, 16], "jwtr": [13, 14], "k": 27, "keep": 13, "kei": [12, 14, 26, 27, 28], "kept": 13, "key_1": 28, "kwarg": [12, 16, 28], "l": [12, 14, 16, 30], "l2": [14, 15, 16], "l_p_norm": [9, 14, 15, 16, 26, 28, 30], "l_p_norm_str": [14, 15], "label": [11, 12, 13, 14, 15, 16, 21, 24, 27, 28, 30], "label_col": 14, "lambda": [11, 14, 15, 16, 17, 25, 26], "larg": [27, 30], "larger": [14, 15, 16], "largest": 13, "largest_groups_name_map": 14, "last": 30, "later": 13, "lead": 30, "learn": [19, 20, 25, 26, 27], "least": 13, "left": [12, 26], "leftarrow": [12, 14, 15, 16], "legend": [12, 14, 29], "len": [11, 13, 14, 15, 16], "leq": 26, "let": 8, "level": [11, 14, 15, 16, 24, 26, 28], "lgbmclassifi": 12, "lgbmclassifierlgbmclassifi": 12, "li": [8, 24], "librari": [20, 24], "lightgbm": 12, "like": 21, "likelihood": 17, "linalg": [14, 15, 16], "line": 12, "linear_model": 25, "linestyl": [12, 14, 15, 16], "list": [13, 14, 15, 16, 28], "ll": 12, "lo_thr": 11, "load": [12, 13, 14], "load_ac": 13, "load_acs_data": 14, "loc": [12, 13], "local": [20, 26], "log": [11, 12, 14, 15, 16], "log_loss": [21, 27], "logic": 30, "logist": 21, "logisticregress": 25, "loss": [14, 15, 16, 21, 30], "low": [11, 13, 15, 16], "low_thr": 11, "lower": [27, 28], "lowest": [13, 29], "lp": [15, 30], "lp_acc": [11, 15], "lp_eq_odd": [11, 15], "lt": [12, 14, 15, 16], "lvert": 26, "lw": [12, 14, 15, 16], "m": [11, 12, 14, 15, 16, 21], "m_a": 21, "m_b": 21, "m_diff": 21, "m_ratio": 21, "made": 26, "mai": [12, 14, 26, 27, 30], "main": [0, 3, 12], "make": 13, "male": 12, "mani": 27, "map": [10, 11, 13, 15, 16, 19, 29], "map_to_sequenti": 13, "mar": [13, 14], "marit": [13, 14], "marker": [12, 14, 15, 16], "markers": [14, 15, 16], "match": 26, "materi": 19, "mathbb": 26, "mathcal": 26, "matplotlib": [12, 14, 15, 16, 20, 29], "matter": 9, "max": [11, 12, 13, 14, 15, 16, 21, 25], "max_": 26, "max_it": 12, "max_roc_tick": [11, 15, 16, 30], "max_sensitive_group": 13, "maxim": 11, "maximum": [9, 14, 16, 18, 26, 30], "mean": [11, 12, 13, 14, 15, 16, 21], "measur": [8, 14, 15, 16], "meet": 26, "membership": [24, 27, 30], "method": [12, 17, 28, 30], "metric": [3, 9, 10, 11, 15, 16, 19, 24, 25, 26, 28, 29], "metric_nam": 27, "metric_valu": 27, "middle_scores_filt": 11, "mig": [13, 14], "mil": [13, 14], "militari": [13, 14], "min": [13, 21], "minim": [9, 14, 15, 16], "minimum": 12, "minut": [11, 12, 14], "mix": [8, 18], "mkdir": 13, "ml": 26, "mobil": [13, 14], "model": [8, 14, 15, 16, 24, 25, 26, 28, 29, 30], "model_nam": [12, 14, 15, 29], "model_select": [12, 13], "modul": [0, 19, 26], "more": [25, 26], "moritz": [19, 26], "most": 8, "multi": 14, "multipl": [14, 24, 28], "must": [13, 25], "n": [11, 12, 15], "n_color": [14, 15, 16], "n_group": [11, 14, 15, 16, 25], "n_job": [12, 14, 15, 16, 28], "n_sampl": [11, 15, 16], "name": [14, 27, 28, 29, 30], "nativ": [13, 14], "nbviewer": [12, 14], "ndarrai": [12, 27, 28, 30], "necessari": [8, 10, 13, 26], "need": [8, 13, 16, 24, 29, 30], "neg": [8, 9, 11, 12, 14, 15, 16, 18, 21, 30], "net": [19, 26], "new": [11, 24, 29], "new_test_s": 13, "nois": [11, 15, 16], "noncontigu": 17, "none": [11, 12, 13, 14, 15, 27, 28, 29, 30], "nonneg": 9, "norm": [9, 14, 15, 16, 21, 25, 28, 30], "normal": [11, 15, 16], "note": [11, 12, 13, 14, 15, 28, 30], "notebook": [11, 12, 13, 14, 15, 16, 19, 20, 26], "now": [13, 26], "np": [11, 12, 13, 14, 15, 16, 25, 26, 27, 28, 30], "nu": 12, "num_determ_thr": 11, "num_featur": 30, "num_group": 30, "num_sampl": 30, "number": [11, 13, 28, 30], "numer": 12, "numpi": [11, 12, 13, 14, 15, 16, 20, 25], "nuniqu": 13, "o": [12, 28], "object": [12, 13, 14, 24, 28, 30], "obtain": 28, "occp": [13, 14], "occup": [13, 14], "odd": [6, 7, 8, 9, 10, 11, 12, 16, 24, 28, 30], "off": [10, 15, 17, 19, 24], "omit": 28, "one": [12, 28, 30], "ones": 13, "onli": [13, 27, 28, 30], "onward": 13, "openreview": [19, 26], "oper": [13, 18, 24], "opportun": [8, 9, 24, 26], "optim": [8, 11, 19, 20, 24, 26, 28, 30], "optima": 29, "optimum": 29, "option": [13, 14, 15, 16, 24, 25, 27, 28, 29, 30], "or_": 13, "oral": 26, "ord": [14, 15, 16], "order": 13, "org": [12, 14], "origin": [13, 14, 15, 16], "other": [10, 14, 26], "other_df": 13, "other_idx": 13, "our": [11, 15, 16], "out": [10, 11, 19, 28], "outer": 28, "outer_ytick": 28, "output": [24, 26, 29, 30], "over": [11, 21, 26], "overrid": 28, "overview": [19, 26], "p": [12, 14, 16, 26, 30], "pac": 12, "packag": [12, 19, 20, 24, 26], "page": [9, 12, 14, 19, 21, 27], "pair": [8, 27, 30], "pairwis": 21, "palett": [12, 14, 15, 16], "panda": [13, 14, 20, 28], "paper": 13, "parallel": 28, "paramet": [9, 13, 26, 27, 28, 29, 30], "parameter": [14, 15, 16], "paramount": 9, "parent": [13, 14], "pareto": [4, 10, 14, 24, 25], "pareto_curv": [12, 14, 15, 16, 28], "pariti": [8, 9, 10, 14, 15, 16, 17, 20, 25, 30], "pars": [10, 14], "partial": [11, 26], "pass": [17, 25, 28], "path": [13, 14], "pathlib": [13, 14], "pd": [13, 14, 28, 29], "per": [11, 15, 16, 21, 28, 30], "percentil": [12, 27], "perf_col": 28, "perf_metr": [12, 14, 15, 16, 28, 29], "perform": [3, 11, 24, 25, 28, 29], "person": 13, "pick": 30, "pip": [11, 12, 14, 15, 16, 20, 26], "place": [13, 14], "pleas": [12, 14], "plot": [17, 18, 19, 20, 24, 28], "plot_diagon": 29, "plot_global_optimum": 29, "plot_group_optima": 29, "plot_group_triangul": 29, "plot_postprocessing_fronti": [12, 14, 15, 16, 28, 29], "plot_postprocessing_solut": [14, 15, 16, 29], "plot_relax": [14, 15, 16, 29], "plot_roc_curv": [14, 15, 16, 29], "plot_roc_hul": [14, 15, 16, 29], "plt": [12, 14, 15, 16], "plu": 13, "pobp": [13, 14], "point": [8, 9, 13, 18, 24, 26, 28, 29, 30], "pos_label": 12, "posit": [8, 9, 11, 12, 14, 15, 16, 17, 18, 21, 30], "possibli": [3, 12, 26, 30], "post": [24, 29], "postproc_clf": [11, 14, 15], "postproc_results_df": [12, 14, 15, 16, 28, 29], "postproc_templ": 28, "postprocess": [5, 10, 12, 14, 17, 19, 24, 25, 26, 29], "postprocessed_clf": [14, 15, 16, 29], "powpuma": [13, 14], "ppr": [8, 9, 10, 18, 21, 30], "ppr_diff": 16, "pre": [11, 13, 14, 15, 16, 24, 28, 30], "precis": [11, 21, 28], "pred": 11, "predict": [0, 3, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 21, 24, 26, 27, 28, 30], "predict_method": [12, 15, 16, 28], "predict_proba": [14, 24, 25, 26, 28], "predictor": [10, 12, 17, 19, 24, 25, 26, 28, 29, 30], "prefix": 13, "present": 26, "preval": [11, 13, 14, 15, 16, 26, 30], "print": [11, 12, 13, 14, 15, 16], "probabl": [14, 24, 30], "problem": [6, 7, 11], "process": [10, 13, 14, 24, 29], "produc": [11, 15, 16, 21, 30], "product": [11, 14, 15, 16], "properti": 30, "protect": [13, 27], "provid": [11, 24, 26, 27, 28, 30], "public": 19, "puma": [13, 14], "py": [0, 3], "pypi": 26, "pyplot": [12, 14, 15, 16], "pyproject": 20, "quantifi": 24, "quickstart": [19, 24, 26], "r": [12, 14, 15, 16, 26, 30], "rac1p": [13, 14], "race": [12, 13, 14], "rais": [17, 25], "ran": [11, 14, 15, 16], "random": [1, 11, 12, 14, 15, 16, 18, 24, 26, 27, 28, 30], "random_st": [12, 13], "randomforestclassifi": 14, "randomforestclassifierrandomforestclassifi": 14, "randomizedclassifi": 8, "rang": [11, 13, 14, 15, 16], "rate": [8, 9, 11, 14, 15, 16, 18, 19, 21, 30], "ratio": 27, "ravel": [11, 16], "rc": [12, 14, 15, 16], "re": [13, 28], "read": 14, "read_csv": 14, "readm": 19, "real": [26, 30], "realiz": [8, 11, 18, 24, 30], "realized_roc_point": [14, 15, 16], "reason": 16, "recal": 21, "receiv": 18, "red": 12, "reduc": 13, "reduct": 12, "refer": [19, 26], "reflect": 30, "rel": 13, "relationship": [13, 14], "relax": [6, 7, 9, 10, 14, 15, 16, 24, 29, 30], "relaxedthresholdoptim": [8, 10, 11, 14, 15, 16, 24, 25, 26, 28, 29], "relp": [13, 14], "remain": 13, "remov": 13, "remove_state_col_lat": 13, "render": [12, 14, 20], "replac": 16, "repo": 26, "report": [27, 30], "repositori": 19, "represent": [12, 14, 19, 26], "reproduc": 30, "requir": [10, 11, 12, 14, 15, 16, 24, 27], "rerun": [12, 14], "reshap": [11, 15, 16], "resolut": 30, "respect": 28, "result": [11, 12, 16, 24, 27, 28, 29], "retrain": 24, "return": [11, 12, 13, 14, 15, 16, 27, 28, 30], "return_groupwise_metr": [21, 27], "return_x_i": 12, "rf_clf": 14, "right": [12, 13, 26], "rightarrow": [12, 14, 15, 16], "rng": [11, 15, 16], "roc": [9, 18, 24, 26, 29, 30], "roc_a": 26, "roc_b": 26, "roc_curv": [11, 14, 15, 16], "roc_util": [14, 15, 16], "root": [14, 15, 16], "root_dir": 13, "rotat": 12, "row": [13, 28], "run": [10, 11, 12], "rvert_p": 26, "s_fit": 14, "s_group": 11, "s_other": 12, "s_test": [12, 14], "s_train": [12, 14], "s_val": [12, 14], "same": [12, 16, 24, 28], "sampl": [11, 13, 15, 16, 27, 30], "saniti": 13, "satisfi": [24, 25], "save": 13, "save_to_disk": 13, "scale": [11, 15, 16], "scatterplot": 12, "scientif": 20, "scikit": [20, 25, 27], "scipi": [11, 14, 15, 16, 20], "score": [0, 8, 17, 19, 21, 24, 26, 27, 28, 30], "seaborn": [12, 14, 15, 16, 20], "search": [11, 12, 30], "see": [8, 20, 26], "seed": [11, 12, 13, 14, 15, 16, 27, 28, 30], "seem": 13, "seen": 16, "segment": 8, "select": [9, 13], "self": 30, "sensit": [12, 13, 26, 27, 28, 30], "sensitive_attr": [11, 14], "sensitive_attribut": [12, 14, 16, 27], "sensitive_col": [12, 14], "sensitive_col_invers": 12, "sensitive_col_map": 12, "sensitive_featur": 12, "sequenc": [28, 30], "serv": 28, "servic": [13, 14], "set": [2, 3, 12, 13, 14, 15, 16, 21, 26], "seven": [19, 26], "sever": 27, "sex": [12, 13, 14], "shape": [13, 30], "should": [9, 12, 13, 28, 29], "show": [12, 14, 15, 16, 29], "show_data_typ": [12, 14, 15, 16, 29], "show_results_on": 12, "shown": [26, 29], "shuffl": 13, "similar": 9, "simpli": [11, 15, 16], "singl": [11, 14], "size": [11, 13, 14, 15, 16], "sklearn": [11, 12, 13, 14, 15, 16, 25, 26, 28], "slack": [12, 28], "slower": 12, "small": [12, 14, 15, 16, 24], "smaller": [14, 15, 16], "sn": [12, 14, 15, 16], "so": [11, 13, 15, 16], "socialfound": [12, 20, 26], "societ": 19, "solut": [5, 8, 24, 26, 29, 30], "solv": [6, 24], "solve_brute_forc": 11, "solve_lp": 11, "solver": [7, 10, 14, 15, 16], "some": [12, 26, 29], "sort": [13, 14, 28], "sourc": [26, 27, 28, 29, 30], "spatial": [11, 14, 15, 16], "specif": [8, 13, 24, 26, 29, 30], "specifi": [3, 8, 9], "split": [12, 13, 28], "split_folktables_task": 13, "split_x_y_": 14, "squar": 21, "squared_loss": 21, "src": [0, 3], "st": [13, 14], "stand": 10, "standard": [20, 30], "start": [13, 17, 25], "state": [12, 13], "state_col": 13, "state_col_data": 13, "state_list": 13, "statu": [13, 14, 15, 16], "step": [12, 20], "str": [13, 14, 15, 28, 29, 30], "stratifi": [12, 13], "stratify_by_st": 13, "strict": [9, 17, 24, 25, 26], "strictli": 8, "style": [12, 14, 15, 16], "sub": 19, "subfolder_nam": 13, "sum": [8, 11, 14, 15, 16, 26], "summar": [9, 21], "superior": 11, "supp": 19, "supplementari": 19, "support": 8, "survei": 13, "survey_year": 13, "sy": [11, 12, 13, 14, 15, 16], "synthet": [10, 11], "t": [13, 14, 15, 16], "take": [12, 14, 16, 30], "target": [3, 8, 11, 13, 14, 15, 24, 26, 29], "target_point": [14, 15, 16], "task": [13, 14], "task_nam": [13, 14], "task_obj": [13, 14], "templat": 28, "test": [12, 13, 14, 28, 29], "test_data": 13, "test_df": 13, "test_idx": 13, "test_siz": [12, 13], "them": [9, 11, 12, 14, 15, 16, 17], "theoret": [8, 15, 16, 30], "theoretical_global_cost": [15, 16], "thi": [8, 9, 11, 12, 13, 14, 15, 16, 19, 21, 25, 26, 27, 28, 29, 30], "threshold": [10, 11, 12, 14, 18, 19, 24, 26, 30], "threshold_optim": [8, 14, 15, 16, 30], "threshold_target": 27, "threshold_ticks_step": 11, "thrsh_dict": 11, "tick": [28, 30], "time": [11, 12, 14, 15, 16], "titl": [12, 19, 26], "tnr": [18, 21, 30], "to_csv": 13, "to_list": 13, "to_numpi": [13, 14], "toler": [11, 12, 14, 15, 16, 18, 24, 25, 26, 28, 30], "tolerance_tick": [12, 14, 28], "tolerance_tick_step": 28, "toml": 20, "took": [11, 14, 15, 16], "total": [11, 12, 14, 15, 16], "total_combin": 11, "tp": 21, "tpr": [8, 9, 10, 14, 15, 16, 18, 21, 26, 29, 30], "tpr_diff": [14, 16, 21], "tpr_group": 21, "tqdm": [11, 13, 14], "trade": [10, 15, 17, 19, 24], "train": [13, 24, 25, 26, 30], "train_data": 13, "train_df": 13, "train_idx": 13, "train_siz": 13, "train_test_split": [12, 13], "triangul": [14, 15, 16, 29], "triplet": [28, 30], "true": [12, 13, 14, 15, 16, 18, 21, 27, 28, 29], "true_negative_rate_par": 16, "true_positive_rate_par": [9, 14, 16, 26], "trust": [12, 14], "try": [12, 13, 14], "tunabl": 24, "tupl": [11, 13, 14, 28], "twelfth": [19, 26], "twice": 26, "two": [8, 11], "txt": 20, "type": [9, 14, 27, 28, 29, 30], "types_dict": 13, "unabl": [12, 14], "unawar": 14, "uncertainti": [24, 25, 28], "unconstr_clf": 12, "unconstr_dispar": 12, "unconstr_perform": 12, "unconstr_test_result": 12, "unconstrain": [11, 14, 16], "under": [18, 24, 26], "underli": 30, "unf_val": 14, "unfair": 14, "uniform": 11, "uniqu": [11, 12, 14], "unique_group": 11, "unit": 8, "unpack": [11, 14], "unprocess": [19, 26], "up": [9, 26], "updat": [13, 19], "upper": [12, 27], "url": [19, 26], "us": [1, 2, 9, 10, 11, 12, 13, 15, 16, 20, 25, 26, 27, 28, 29], "usag": [10, 19, 26], "user": [8, 11, 12, 14, 15, 16, 24], "usual": 29, "util": [4, 5, 17, 24], "utility_par": 12, "v": [18, 21], "val": [12, 13, 14], "val_df": 13, "val_idx": 13, "valid": [12, 13, 14, 28], "validation_data": 13, "validation_s": [12, 13], "valu": [13, 17, 26, 27, 28, 29, 30], "value_count": 13, "valueerror": [17, 25], "vari": [12, 18, 28], "variabl": [13, 14, 15, 16], "varianc": [14, 15, 16], "variant": 27, "variou": 19, "verbos": 12, "vertic": [12, 29], "verticalalign": 12, "via": [9, 21, 26, 28], "violat": [14, 15, 30], "visual": [24, 25, 28], "vstack": [14, 15, 16], "wa": 19, "wall": [11, 12, 14, 15, 16], "want": [13, 24], "warn": 13, "we": [8, 11, 12, 13, 15, 16, 21, 26], "weert": 12, "welcom": 26, "were": 13, "when": [8, 9, 16, 26, 27, 28, 29, 30], "where": [13, 26], "whether": [13, 27, 28, 29], "which": [11, 15, 16, 24, 26, 27, 28, 29, 30], "whichev": 13, "while": [11, 14], "white": [12, 13, 14], "whitegrid": [12, 14, 15, 16], "whose": 28, "wise": [14, 15, 16, 24, 26, 27, 30], "without": 24, "word": [14, 26], "work": 24, "worker": [13, 14], "wrap": [17, 24, 30], "wrapper": 30, "x": [12, 13, 17, 25, 26, 28, 30], "x_feat": 11, "x_fit": 14, "x_other": 12, "x_test": [12, 14, 25, 26], "x_train": [12, 14], "x_val": [12, 14], "xlabel": [12, 14, 15, 16], "xlim": [12, 14, 15], "xtick": 28, "xy": 12, "y": [12, 25, 26, 28, 30], "y_fit": 14, "y_fit_pr": 14, "y_fit_pred_scor": 28, "y_label": 11, "y_other": 12, "y_pred": [16, 25, 26, 27], "y_pred_binari": [11, 14, 15, 16], "y_pred_binary_brute_forc": 11, "y_pred_binary_lp": 11, "y_pred_scor": [12, 27], "y_pred_test": 26, "y_score": [11, 15, 16, 30], "y_test": [12, 14], "y_test_scor": 14, "y_train": [12, 14], "y_true": [11, 12, 14, 15, 16, 27], "y_true_groupwis": [11, 15, 16], "y_val": [12, 14], "ye": 17, "year": [13, 19, 26], "yet": 13, "ylabel": [12, 14, 15, 16], "ylim": [12, 14, 15], "you": [12, 13, 16, 19, 24, 26], "your": 30, "zero": [11, 15, 16], "zeros_lik": 11, "zip": [11, 13, 14, 15, 16], "zorder": 12}, "titles": ["error_parity.binarize", "error_parity.classifiers", "error_parity.cvxpy_utils", "error_parity.evaluation", "error_parity.pareto_curve", "error_parity.plotting", "error_parity.roc_utils", "error_parity.threshold_optimizer", "Core concepts", "Constraints", "Example jupyter notebooks", "Comparison between <code class=\"docutils literal notranslate\"><span class=\"pre\">error-parity</span></code>\u2019s LP solver and a brute-force solver", "Example usage of <code class=\"docutils literal notranslate\"><span class=\"pre\">error-parity</span></code> with other fairness-constrained classifiers", "Obtaining parsed folktables datasets", "Achieving <em>equalized odds</em> on real-world ACS data (ACSIncome)", "Achieving <em>equalized odds</em> on synthetic data", "Achieving different fairness constraints on synthetic data", "FAQ", "Glossary", "Welcome to error-parity\u2019s documentation!", "Installation", "Metrics reference", "API reference", "Notebooks Gallery", "Overview", "Quickstart", "README.md", "Evaluation and metrics", "Postprocessing frontier (Pareto curve)", "Plotting utilities", "Using the RelaxedThresholdOptimizer"], "titleterms": {"": [11, 12, 14, 15, 16, 19], "0": 17, "1": [11, 17], "2": 11, "ac": 14, "accuraci": [11, 12, 13, 16], "achiev": [14, 15, 16], "acsincom": 14, "adjust": 12, "adult": 12, "aggreg": 21, "also": 24, "anoth": 12, "api": [22, 28], "ar": 17, "attain": 12, "avail": 9, "awar": 12, "between": [11, 15, 16], "binar": 0, "bootstrap": 27, "brute": 11, "can": 17, "chang": 16, "cite": [19, 26], "classifi": [1, 12, 13, 14, 15, 16], "compar": 11, "comparison": 11, "comput": [15, 16], "concept": 8, "constant": 13, "constrain": 12, "constraint": [8, 9, 11, 16, 26], "construct": [14, 15, 16], "constructor": 30, "convex": 8, "core": 8, "cost": 8, "curv": [8, 28], "cvxpy_util": 2, "data": [11, 12, 13, 14, 15, 16], "dataset": 13, "decision_funct": 17, "deriv": [14, 15, 16], "develop": 20, "differ": [15, 16], "distanc": [15, 16], "do": 17, "document": 19, "each": 13, "ell_p": 8, "empir": [15, 16], "end": 27, "equal": [14, 15, 21, 26], "error": [11, 12, 19, 24, 26], "error_par": [0, 1, 2, 3, 4, 5, 6, 7], "estim": [17, 27], "evalu": [3, 27], "exampl": [10, 12, 14, 25], "fair": [8, 12, 14, 15, 16, 21, 26, 27], "fairness_constraint": 16, "faq": 17, "featur": 24, "fetch": 12, "fit": 14, "folktabl": 13, "forc": 11, "from": [14, 15, 16, 20], "frontier": [12, 15, 16, 28], "g": 17, "galleri": 23, "get": [17, 26], "given": [11, 14, 15, 16], "glossari": 18, "group": 17, "groupwis": 21, "guidanc": 9, "how": [17, 26], "hull": 8, "i": [17, 24], "indic": 19, "instal": [20, 26], "instead": 17, "interpret": 28, "jupyt": 10, "kei": 24, "let": 12, "log": 13, "lp": 11, "map": 12, "md": 26, "metric": [14, 21, 27], "minim": 25, "model": [12, 17], "my": 17, "need": 17, "next": 25, "norm": 8, "note": [16, 25], "notebook": [10, 23], "obtain": 13, "odd": [14, 15, 21, 26], "off": [12, 14], "omit": 26, "opportun": 14, "optim": [14, 15, 16], "other": 12, "output": [11, 14, 15, 16, 21], "overview": 24, "pareto": [15, 16, 28], "pareto_curv": 4, "pariti": [11, 12, 19, 24, 26], "pars": 13, "perform": [8, 14, 15, 16, 21, 27], "plot": [5, 12, 14, 15, 16, 29], "point": [14, 15, 16], "post": 12, "postprocess": [15, 16, 28], "practic": 9, "predict_proba": 17, "predictor": [11, 14, 15, 16], "process": 12, "pypi": 20, "python": 20, "quickstart": 25, "random": 8, "readm": 26, "real": [11, 14, 15, 16], "realiz": [14, 15, 16], "refer": [21, 22], "relat": 28, "relax": [8, 12, 26], "relaxedthresholdoptim": 30, "requir": 20, "result": 14, "retrain": 17, "roc": [8, 14, 15, 16], "roc_util": 6, "score": [11, 14, 15, 16], "see": 24, "should": 17, "similar": 14, "solut": [11, 14, 15, 16], "solver": 11, "some": [11, 14, 15, 16], "sourc": 20, "standard": 12, "start": 26, "step": 25, "support": 20, "synthet": [15, 16], "target": 16, "theoret": 14, "theoriz": [15, 16], "thi": 24, "threshold": 8, "threshold_optim": 7, "tip": 30, "toc": 26, "toler": [9, 17], "trade": [12, 14], "train": [11, 12, 14, 15, 16], "type": [12, 13], "typic": 24, "uci": 12, "uncertainti": 17, "unconstrain": 12, "us": [14, 17, 24, 30], "usag": 12, "util": [28, 29], "v": [11, 14], "valu": [11, 14, 15, 16], "version": 20, "via": 12, "violat": [11, 16], "welcom": 19, "what": [17, 24], "when": 24, "work": 26, "workflow": 24, "world": 14, "x": [11, 14, 15, 16], "y": [11, 14, 15, 16], "your": 16}})